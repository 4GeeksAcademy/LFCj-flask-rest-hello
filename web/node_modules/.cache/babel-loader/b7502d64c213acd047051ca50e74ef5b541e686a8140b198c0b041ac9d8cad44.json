{"ast":null,"code":"import { baseUrl, fetchWrapper, usersUrl } from \"../fetch\";\nconst usersEndpoint = `${baseUrl}${usersUrl}`;\nexport const getUsers = async () => {\n  return await fetchWrapper(usersEndpoint).then(data => {\n    return data;\n  });\n};\nexport const getUserFavs = async userId => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`).then(data => {\n    return data;\n  });\n};\nexport const postUserFavs = async (userId, externalId, name, type) => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"aplication/json\"\n    },\n    body: JSON.stringify({\n      external_id: externalId,\n      name: name,\n      type: type\n    })\n  }).then(data => {\n    return data;\n  });\n};\nexport const deleteUserFavs = async (userId, favId) => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"aplication/json\"\n    },\n    body: JSON.stringify({\n      id: favId\n    })\n  }).then(data => {\n    return data;\n  });\n};","map":{"version":3,"names":["baseUrl","fetchWrapper","usersUrl","usersEndpoint","getUsers","then","data","getUserFavs","userId","postUserFavs","externalId","name","type","method","headers","body","JSON","stringify","external_id","deleteUserFavs","favId","id"],"sources":["/workspaces/LFCj-flask-rest-hello/web/src/fetches/user.js"],"sourcesContent":["import { baseUrl, fetchWrapper, usersUrl } from \"../fetch\";\n\nconst usersEndpoint = `${baseUrl}${usersUrl}`;\n\nexport const getUsers = async () => {\n  return await fetchWrapper(usersEndpoint).then((data) => {\n    return data;\n  });\n};\n\nexport const getUserFavs = async (userId) => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`).then(\n    (data) => {\n      return data;\n    },\n  );\n};\n\nexport const postUserFavs = async (userId, externalId, name, type) => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"aplication/json\",\n    },\n    body: JSON.stringify({\n      external_id: externalId,\n      name: name,\n      type: type,\n    }),\n  }).then((data) => {\n    return data;\n  });\n};\n\nexport const deleteUserFavs = async (userId, favId) => {\n  return await fetchWrapper(`${usersEndpoint}${userId}/favourites`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"aplication/json\",\n    },\n    body: JSON.stringify({\n      id: favId,\n    }),\n  }).then((data) => {\n    return data;\n  });\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,UAAU;AAE1D,MAAMC,aAAa,GAAG,GAAGH,OAAO,GAAGE,QAAQ,EAAE;AAE7C,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAO,MAAMH,YAAY,CAACE,aAAa,CAAC,CAACE,IAAI,CAAEC,IAAI,IAAK;IACtD,OAAOA,IAAI;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,OAAO,MAAMP,YAAY,CAAC,GAAGE,aAAa,GAAGK,MAAM,aAAa,CAAC,CAACH,IAAI,CACnEC,IAAI,IAAK;IACR,OAAOA,IAAI;EACb,CACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOD,MAAM,EAAEE,UAAU,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpE,OAAO,MAAMX,YAAY,CAAC,GAAGE,aAAa,GAAGK,MAAM,aAAa,EAAE;IAChEK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,WAAW,EAAER,UAAU;MACvBC,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA;IACR,CAAC;EACH,CAAC,CAAC,CAACP,IAAI,CAAEC,IAAI,IAAK;IAChB,OAAOA,IAAI;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMa,cAAc,GAAG,MAAAA,CAAOX,MAAM,EAAEY,KAAK,KAAK;EACrD,OAAO,MAAMnB,YAAY,CAAC,GAAGE,aAAa,GAAGK,MAAM,aAAa,EAAE;IAChEK,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBI,EAAE,EAAED;IACN,CAAC;EACH,CAAC,CAAC,CAACf,IAAI,CAAEC,IAAI,IAAK;IAChB,OAAOA,IAAI;EACb,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}